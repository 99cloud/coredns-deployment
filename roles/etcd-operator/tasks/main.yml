- name: Copy ca-config.json template to target
  template: 
    src: "{{ role_path }}/templates/ca-config.json.j2"
    dest: "{{ project_template_path }}/etcd/ca-config.json"
  when: etcd_use_tls == "yes"

- name: Copy  ca-csr.json template to target
  template: 
    src: "{{ role_path }}/templates/ca-csr.json.j2"
    dest: "{{ project_template_path }}/etcd/ca-csr.json"
  when: etcd_use_tls == "yes"

- name: Copy etcd-client.json template to target
  template: 
    src: "{{ role_path }}/templates/etcd-client.json.j2"
    dest: "{{ project_template_path }}/etcd/etcd-client.json"
  when: etcd_use_tls == "yes"

- name: Copy peer.json template to target
  template: 
    src: "{{ role_path }}/templates/peer.json.j2"
    dest: "{{ project_template_path }}/etcd/peer.json"
  when: etcd_use_tls == "yes"

- name: Copy server.json template to target
  template: 
    src: "{{ role_path }}/templates/server.json.j2"
    dest: "{{ project_template_path }}/etcd/server.json"
  when: etcd_use_tls == "yes"

- name: Copy cluster role template to target
  template: 
    src: "{{ role_path }}/templates/cluster-role.yml.j2"
    dest: "{{ project_template_path }}/etcd/cluster-role.yml"

- name: Copy cluster role binding template to target
  template: 
    src: "{{ role_path }}/templates/cluster-role-binding.yml.j2"
    dest: "{{ project_template_path }}/etcd/cluster-role-binding.yml"

- name: Copy etcd-operator template to target
  template: 
    src: "{{ role_path }}/templates/etcd-operator.yml.j2"
    dest: "{{ project_template_path }}/etcd/etcd-operator.yml"

- name: Copy etcd cluster template to target
  template: 
    src: "{{ role_path }}/templates/etcd-cluster.yml.j2"
    dest: "{{ project_template_path }}/etcd/etcd-cluster.yml"

- name: Copy crd template to target
  template: 
    src: "{{ role_path }}/templates/etcd_crd.yml.j2"
    dest: "{{ project_template_path }}/etcd/etcd_crd.yml"

- name: Create crd etcdcluster
  shell: "{{ oc_binary }} apply -f {{ project_template_path }}/etcd/etcd_crd.yml" 

- name: “{{ 'Create namespace ' + namespace_coredns_edge }}”
  shell: "{{ oc_binary }} create ns {{ namespace_coredns_edge }}" 
  ignore_errors: "yes"

- name: Remove existing cluster role
  shell: "{{ oc_binary }} delete clusterrole etcd-operator" 
  ignore_errors: "yes"

- name: Remove existing cluster role binding
  shell: "{{ oc_binary }} delete clusterrolebinding etcd-operator" 
  ignore_errors: "yes"

- name: Create cluster role etcd-operator
  shell: "{{ oc_binary }} create -f {{ project_template_path }}/etcd/cluster-role.yml" 
  ignore_errors: "yes"

- name: Create cluster role binding etcd-operator
  shell: "{{ oc_binary }} create -f {{ project_template_path }}/etcd/cluster-role-binding.yml" 
  ignore_errors: "yes"

- name: Create etcd operator
  shell: "{{ oc_binary }} apply -f {{ project_template_path }}/etcd/etcd-operator.yml" 

- name: Create root cert
  shell: "cfssl gencert -initca ca-csr.json | cfssljson -bare ca -"
  args:
    chdir: "{{ project_template_path }}/etcd"
  when: etcd_use_tls == "yes"

- name: Create peer cert
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer peer.json | cfssljson -bare peer"
  args:
    chdir: "{{ project_template_path }}/etcd"
  when: etcd_use_tls == "yes"

- name: Create server cert
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server server.json | cfssljson -bare server"
  args:
    chdir: "{{ project_template_path }}/etcd"
  when: etcd_use_tls == "yes"

- name: Create client cert
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client etcd-client.json | cfssljson -bare etcd-client"
  args:
    chdir: "{{ project_template_path }}/etcd"
  when: etcd_use_tls == "yes"

- name: Fix name issue to match operator secret mapping needs
  shell: |
    mv etcd-client.pem etcd-client.crt
    mv etcd-client-key.pem etcd-client.key
    cp ca.pem etcd-client-ca.crt
    mv server.pem server.crt
    mv server-key.pem server.key
    cp ca.pem server-ca.crt
    mv peer.pem peer.crt
    mv peer-key.pem peer.key
    mv ca.pem peer-ca.crt
    rm *.csr ca-key.pem
  args:
    chdir: "{{ project_template_path }}/etcd"
  when: etcd_use_tls == "yes"

- name: Remove server secrets
  shell: "{{ oc_binary }} delete secret etcd-peer-tls -n {{ namespace_coredns_edge }}"
  ignore_errors: "yes"
  when: etcd_use_tls == "yes"

- name: Remove peer secrets
  shell: "{{ oc_binary }} delete secret etcd-server-tls -n {{ namespace_coredns_edge }}"
  ignore_errors: "yes"
  when: etcd_use_tls == "yes"

- name: Remove client secrets
  shell: "{{ oc_binary }} delete secret etcd-client-tls -n {{ namespace_coredns_edge }}"
  ignore_errors: "yes"
  when: etcd_use_tls == "yes"

- name: Create server secrets
  shell: "{{ oc_binary }} create secret generic etcd-peer-tls --from-file={{ project_template_path }}/etcd/peer-ca.crt --from-file={{ project_template_path }}/etcd/peer.crt --from-file={{ project_template_path }}/etcd/peer.key -n {{ namespace_coredns_edge }}"
  ignore_errors: "yes"
  when: etcd_use_tls == "yes"

- name: Create client secrets
  shell: "{{ oc_binary }} create secret generic etcd-server-tls --from-file={{ project_template_path }}/etcd/server-ca.crt --from-file={{ project_template_path }}/etcd/server.crt --from-file={{ project_template_path }}/etcd/server.key -n {{ namespace_coredns_edge }}"
  ignore_errors: "yes"
  when: etcd_use_tls == "yes"

- name: Create client secrets
  shell: "{{ oc_binary }} create secret generic etcd-client-tls --from-file={{ project_template_path }}/etcd/etcd-client-ca.crt --from-file={{ project_template_path }}/etcd/etcd-client.crt --from-file={{ project_template_path }}/etcd/etcd-client.key -n {{ namespace_coredns_edge }}"
  ignore_errors: "yes"
  when: etcd_use_tls == "yes"

- name: Remove existing cluster
  shell: "{{ oc_binary }} delete etcdclusters.etcd.database.coreos.com {{ etcd_peer_svc_name }} -n {{ namespace_coredns_edge }}"
  ignore_errors: "yes"

- name: Wait 10 secs for deleting existing cluster
  pause:
    seconds: 10

- name: Create etcd clusters
  shell: "{{ oc_binary }} apply -f {{ project_template_path }}/etcd/etcd-cluster.yml"