- name: Copy ca-config.json template to target
  template: 
    src: "{{ role_path }}/templates/ca-config.json.j2"
    dest: "{{ project_template_path }}/nats/ca-config.json"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Copy ca-csr.json template to target
  template: 
    src: "{{ role_path }}/templates/ca-csr.json.j2"
    dest: "{{ project_template_path }}/nats/ca-csr.json"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Copy server.json template to target
  template: 
    src: "{{ role_path }}/templates/server.json.j2"
    dest: "{{ project_template_path }}/nats/server.json"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Copy route.json template to target
  template: 
    src: "{{ role_path }}/templates/route.json.j2"
    dest: "{{ project_template_path }}/nats/route.json"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Copy client.json template to target
  template: 
    src: "{{ role_path }}/templates/client.json.j2"
    dest: "{{ project_template_path }}/nats/client.json"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Copy operator deploy preparation template to target
  template: 
    src: "{{ role_path }}/templates/prepare.yml.j2"
    dest: "{{ project_template_path }}/nats/prepare.yml"
  when: coredns_speaker_mode == "initiative"

- name: Copy operator deploy template to target
  template: 
    src: "{{ role_path }}/templates/operator-deploy.yml.j2"
    dest: "{{ project_template_path }}/nats/operator-deploy.yml"
  when: coredns_speaker_mode == "initiative"

- name: Copy cluster deploy template to target
  template: 
    src: "{{ role_path }}/templates/cluster-deploy.yml.j2"
    dest: "{{ project_template_path }}/nats/cluster-deploy.yml"
  when: coredns_speaker_mode == "initiative"

- name: Remove existing resource for operator
  shell: "{{ oc_binary }} delete -f {{ project_template_path }}/nats/prepare.yml"
  when: coredns_speaker_mode == "initiative"
  ignore_errors: "yes"

- name: Remove older operator
  shell: "{{ oc_binary }} delete -f {{ project_template_path }}/nats/operator-deploy.yml"
  when: coredns_speaker_mode == "initiative"
  ignore_errors: "yes"

- name: Wait 10 secs for deleting older operator-deploy
  pause:
    seconds: 10

- name: Prepare for nats operator
  shell: "{{ oc_binary }} apply -f {{ project_template_path }}/nats/prepare.yml"
  when: coredns_speaker_mode == "initiative"
  ignore_errors: "yes"

- name: Deploy nats operator
  shell: "{{ oc_binary }} apply -f {{ project_template_path }}/nats/operator-deploy.yml"
  when: coredns_speaker_mode == "initiative"
  ignore_errors: "yes"

- name: Create root cert
  shell: "cfssl gencert -initca ca-csr.json | cfssljson -bare ca -"
  args:
    chdir: "{{ project_template_path }}/nats"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Create server cert
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server server.json | cfssljson -bare server"
  args:
    chdir: "{{ project_template_path }}/nats"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Create route cert
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=route route.json | cfssljson -bare route"
  args:
    chdir: "{{ project_template_path }}/nats"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Create client cert
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client.json | cfssljson -bare client"
  args:
    chdir: "{{ project_template_path }}/nats"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Remove route tls secret 
  shell: "{{ oc_binary }} delete secret nats-routes-tls -n {{ namespace_coredns_edge }}"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"
  ignore_errors: "yes"

- name: Rmove server tls secret 
  shell: "{{ oc_binary }} delete secret nats-clients-tls -n {{ namespace_coredns_edge }}"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"
  ignore_errors: "yes"

- name: Create server tls secret 
  shell: "{{ oc_binary }} create secret generic nats-clients-tls --from-file=ca.pem --from-file=server-key.pem --from-file=server.pem -n {{ namespace_coredns_edge }}"
  args:
    chdir: "{{ project_template_path }}/nats"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Create route tls secret 
  shell: "{{ oc_binary }} create secret generic nats-routes-tls --from-file=ca.pem --from-file=route-key.pem --from-file=route.pem -n {{ namespace_coredns_edge }}"
  args:
    chdir: "{{ project_template_path }}/nats"
  when: coredns_speaker_mode == "initiative" and nats_use_tls == "yes"

- name: Remove existing cluster
  shell: "{{ oc_binary }} delete -f cluster-deploy.yml"
  args:
    chdir: "{{ project_template_path }}/nats"
  when: coredns_speaker_mode == "initiative"
  ignore_errors: "yes"

- name: Wait 10 secs for deleting existing cluster
  pause:
    seconds: 10

- name: Creating cluster
  shell: "{{ oc_binary }} apply -f cluster-deploy.yml"
  args:
    chdir: "{{ project_template_path }}/nats"
  when: coredns_speaker_mode == "initiative"