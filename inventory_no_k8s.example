[all:vars]
# basic section starts
project_template_path="/etc/coredns-edge-deployment"
coredns_speaker_mode="passive"
# basic section ends

# tls sign section starts
localhost_tls_dir="/etc/coredns-edge-tls-dir"
tls_c="CHINA"
tls_l="Shanghai"
tls_o="Your Ognization"
tls_st="Shanghai"
tls_ou="CAAS"
etcd_node1_ip="10.0.0.28"
etcd_node1_hostname="etcd-node1"
etcd_node1_domain=""
etcd_node1_fqdn="{{ etcd_node1_hostname + '.' + etcd_node1_domain }}"
etcd_node1_address_set="{{ etcd_node1_ip + ',' + etcd_node1_hostname + '.' + etcd_node1_domain + ',' + etcd_node1_hostname }}"
etcd_node2_ip="10.0.0.29"
etcd_node2_hostname="etcd-node2"
etcd_node2_domain=""
etcd_node2_fqdn="{{ etcd_node2_hostname + '.' + etcd_node2_domain }}"
etcd_node2_address_set="{{ etcd_node2_ip + ',' + etcd_node2_hostname + '.' + etcd_node2_domain + ',' + etcd_node2_hostname }}"
etcd_node3_ip="10.0.0.30"
etcd_node3_hostname="etcd-node3"
etcd_node3_domain=""
etcd_node3_fqdn="{{ etcd_node3_hostname + '.' + etcd_node3_domain }}"
etcd_node3_address_set="{{ etcd_node3_ip + ',' + etcd_node3_hostname + '.' + etcd_node3_domain + ',' + etcd_node3_hostname }}"
# tls sign section ends

# etcd operator section starts
etcd_ca_file_path="{{ project_template_path + '/etcd/etcd-client-ca.crt' }}"
etcd_key_file_path="{{ project_template_path + '/etcd/etcd-client.key' }}"
etcd_cert_file_path="{{ project_template_path + '/etcd/etcd-client.crt' }}"
# etcd operator section ends

# nats section starts
nats_use_tls="yes"
nats_cluster_name="nats-cluster"
message_queue_subject="msg.edge.coredns"
message_queue_username="username"
message_queue_password="password"
message_queue_ca_file_path="{{ project_template_path + '/nats/ca.pem' }}"
message_queue_key_file_path="{{ project_template_path + '/nats/client-key.pem' }}"
message_queue_cert_file_path="{{ project_template_path + '/nats/client.pem' }}"
nats_service_url="127.0.0.1"
# nats section ends

# coredns management api section starts
database_endpoints="https://etcd-node2:2379 | https://etcd-node1:2379 | https://etcd-node3:2379"
api_auth_mode="token" # so far we only support token
allowed_token="token1 | token2 | token3"
coredns_api_port=80
database_tls_dir={{ project_template_path + '/' + 'etcd/' + 'certs' }}
# coredns management api section ends

# coredns message plugin section starts
coredns_upstream_address=114.114.114.114
coredns_service_port=53
# 填写api service的lb的地址或者hostname
# 这里为了方便我只写了其中的一个节点的地址，比如 172.16.100.100:8080
coredns_speaker_service_address="etcd-node1"
# 注意token必须是上面"allowed_token"中的一个
initial_data_provider_service_url="{{ 'http://' + coredns_speaker_service_address + '/99cloud/coredns-speaker/1.0.0/hijack-list?token=token1' }}"
# 建议不小10秒
ask_frequency=10
enable_report="false"
report_frequency=10
default_report_url="{{ 'http://' + coredns_speaker_service_address + '/99cloud/coredns-speaker/1.0.0/report?token=token1' }}"
# coredns message plugin section ends

# 不要改，逻辑是在本地先签名证书，所以你运行ansible的时候可以是在一个部署节点上
# 也可以是在任何一台部署的目标机器上
[tls]
localhost              ansible_connection=local

# 请使用hostname，不要用ip因为复制证书的时候需要
[etcd]
etcd-node1
etcd-node2
etcd-node3
#localhost              ansible_connection=local
#172.16.60.17  ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa_rhel

[nats]
etcd-node1
etcd-node2
etcd-node3
#localhost              ansible_connection=local
#172.16.60.17  ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa_rhel

[coredns_api]
etcd-node1
etcd-node2
etcd-node3
#localhost              ansible_connection=local
#172.16.60.17  ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa_rhel

[coredns]
etcd-node1
etcd-node2
etcd-node3
#localhost              ansible_connection=local
#172.16.60.17  ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa_rhel